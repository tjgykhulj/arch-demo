ext {
    springBootVersion = '2.2.5.RELEASE'
    lombokVersion = '1.18.6'
    jacksonVersion = '2.9.9'
}

buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
    }

    dependencies {
        classpath("org.github.tjg:plugin-demo:1.0.0-SNAPSHOT")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

allprojects {
    apply plugin: "java-library"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
    }

    dependencies {
        compile "org.apache.commons:commons-lang3:3.10"
        compile "com.google.guava:guava:28.1-jre"
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    }
}

project(":spring-demo") {
    apply plugin: 'org.github.tjg.plugin'
}

project(":plugin-demo") {
    group 'org.github.tjg'

    apply plugin: 'maven-publish'
    version '1.0.0-SNAPSHOT'

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
    dependencies {
        implementation gradleApi()
        implementation "org.reflections:reflections:0.9.10"
    }
}

project("netty-demo") {
    dependencies {
        implementation "io.netty:netty-all:4.1.48.Final"
    }
}